import { ElementRef, Directive, NgModule } from '@angular/core';
import 'jquery-nice-select';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class NgNiceSelectDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        $(this.el.nativeElement).niceSelect();
        this.attachAngularChange();
        this.attachObserver();
    }
    /**
     * @return {?}
     */
    attachAngularChange() {
        $(this.el.nativeElement).one('change', () => {
            /** @type {?} */
            const customEvent = document.createEvent('Event');
            customEvent.initEvent('change', true, true);
            this.el.nativeElement.dispatchEvent(customEvent);
            this.attachAngularChange();
        });
    }
    /**
     * @return {?}
     */
    attachObserver() {
        this.observer = new MutationObserver(mutations => {
            mutations.forEach(() => this.onChanges());
        });
        this.observer.observe(this.el.nativeElement, {
            attributes: true,
            childList: true,
            characterData: true
        });
    }
    /**
     * @return {?}
     */
    detachObserver() {
        this.observer.disconnect();
    }
    /**
     * @return {?}
     */
    onChanges() {
        this.detachObserver();
        $(this.el.nativeElement).niceSelect('update');
        this.attachObserver();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.detachObserver();
        $(this.el.nativeElement).niceSelect('destroy');
    }
}
NgNiceSelectDirective.ɵfac = function NgNiceSelectDirective_Factory(t) { return new (t || NgNiceSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NgNiceSelectDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgNiceSelectDirective, selectors: [["", "nice-select", ""]] });
/** @nocollapse */
NgNiceSelectDirective.ctorParameters = () => [
    { type: ElementRef }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgNiceSelectDirective, [{
        type: Directive,
        args: [{
                selector: '[nice-select]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NiceSelectModule {
}
NiceSelectModule.ɵfac = function NiceSelectModule_Factory(t) { return new (t || NiceSelectModule)(); };
NiceSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NiceSelectModule });
NiceSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NiceSelectModule, [{
        type: NgModule,
        args: [{
                declarations: [NgNiceSelectDirective],
                imports: [],
                exports: [NgNiceSelectDirective]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NiceSelectModule, { declarations: [NgNiceSelectDirective], exports: [NgNiceSelectDirective] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NiceSelectModule, NgNiceSelectDirective as ɵa };

//# sourceMappingURL=ng-nice-select.js.map