(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('jquery-nice-select')) :
    typeof define === 'function' && define.amd ? define('ng-nice-select', ['exports', '@angular/core', 'jquery-nice-select'], factory) :
    (factory((global['ng-nice-select'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgNiceSelectDirective = /** @class */ (function () {
        function NgNiceSelectDirective(el) {
            this.el = el;
        }
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                $(this.el.nativeElement).niceSelect();
                this.attachAngularChange();
                this.attachObserver();
            };
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.attachAngularChange = /**
         * @return {?}
         */
            function () {
                var _this = this;
                $(this.el.nativeElement).one('change', function () {
                    /** @type {?} */
                    var customEvent = document.createEvent('Event');
                    customEvent.initEvent('change', true, true);
                    _this.el.nativeElement.dispatchEvent(customEvent);
                    _this.attachAngularChange();
                });
            };
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.attachObserver = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function () { return _this.onChanges(); });
                });
                this.observer.observe(this.el.nativeElement, {
                    attributes: true,
                    childList: true,
                    characterData: true
                });
            };
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.detachObserver = /**
         * @return {?}
         */
            function () {
                this.observer.disconnect();
            };
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.onChanges = /**
         * @return {?}
         */
            function () {
                this.detachObserver();
                $(this.el.nativeElement).niceSelect('update');
                this.attachObserver();
            };
        /**
         * @return {?}
         */
        NgNiceSelectDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.detachObserver();
                $(this.el.nativeElement).niceSelect('destroy');
            };
        NgNiceSelectDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[nice-select]',
                    },] }
        ];
        /** @nocollapse */
        NgNiceSelectDirective.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        return NgNiceSelectDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NiceSelectModule = /** @class */ (function () {
        function NiceSelectModule() {
        }
        NiceSelectModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NgNiceSelectDirective],
                        imports: [],
                        exports: [NgNiceSelectDirective]
                    },] }
        ];
        return NiceSelectModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NiceSelectModule = NiceSelectModule;
    exports.Éµa = NgNiceSelectDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-nice-select.umd.js.map